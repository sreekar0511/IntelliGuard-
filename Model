import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_recall_fscore_support

# Generate 1000 samples
texts = []
labels = []
for _ in range(1000):
   length = np.random.randint(10,100)
   texts.append(''.join(np.random.choice(['a','b','!','?','+','<script>'], size=length)))
   labels.append(np.random.choice(["sql_injection","xss","dos","phishing","social_engineering","malware"]))

data = pd.DataFrame({'text': texts, 'label': labels})

# Train test split
X_train, X_test, y_train, y_test = train_test_split(data['text'], data['label'], test_size=0.2)

# Extract features and vectors
vectorizer = TfidfVectorizer()
vectorizer.fit(data['text'])
X_train_vect = vectorizer.transform(X_train)
X_test_vect = vectorizer.transform(X_test)

# Model building and evaluation
model = LogisticRegression()
model.fit(X_train_vect, y_train)

y_pred = model.predict(X_test_vect)
print(accuracy_score(y_test, y_pred))
precision, recall, fscore, support = precision_recall_fscore_support(
    y_test, y_pred, average='weighted', zero_division=0)
print(precision, recall, fscore)
